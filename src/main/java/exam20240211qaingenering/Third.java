/*
Максим пришёл в Тинькофф, чтобы взять кредит на покупку новогодних подарков. Ему предодобрен кредит в размере m бурлей, значит он может взять любое целое количество бурлей от 0 до m включительно.

У Максима есть заранее подготовленный список из n подарков. Он планирует идти по порядку вдоль списка и каждый раз, когда он видит подарок, на который у него хватает денег, он обязательно моментально его покупает.

Помогите ему посчитать, какое максимальное количество денег у него может остаться после закупки подарков, если он возьмёт кредит оптимального размера (то есть такого, чтобы у него осталось как можно больше денег после покупки подарков по алгоритму).

Формат входных данных:

Первая строка содержит два целых числа n и m (1≤n≤10^5 ,1≤m≤10^9) — длина списка подарков и размер предодобренного кредита.

Вторая строка содержит n целых чисел — цены подарков ai (1≤ai≤10^9).

Формат выходных данных:

Выведите одно число — максимальное количество бурлей, которое могло остаться у Максима после закупки подарков.

Пример 1:
Ввод:
3 10
5 4 1

Вывод:
3

Пример 2:
Ввод:
3 10
1 2 3

Вывод:
4

Замечание 1

В первом примере Максим может взять в кредит 3 бурля, и тогда он купит только последний подарок. Во втором примере Максим может взять кредит на все 10 бурлей и купить все подарки.
Замечание 2
Ошибок в примерах нет.
*/

package exam20240211qaingenering;

import java.util.Scanner;

public class Third {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] data = scanner.nextLine().split(" ");
        int numberGifts = Integer.parseInt(data[0]);
        int maxMoney = Integer.parseInt(data[1]);
        String[] priceGifts = scanner.nextLine().split(" ");
        int high = maxMoney;
        int low = maxMoney;
        for (int i = 0; i < numberGifts; i++) {
            int priceGift = Integer.parseInt(priceGifts[i]);

            if (priceGift < high) {
                high = high - priceGift;
                if (low >= priceGift) {
                    low = priceGift - 1;
                }
            } else {
                if (priceGift == high) {
                    high = priceGift - 1;
                }
                if (low >= priceGift) {
                    low = low - priceGift;
                }
            }
        }
        System.out.println(Math.max(high, low));
    }
}